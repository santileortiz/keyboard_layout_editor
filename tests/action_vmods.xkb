// Name: my_layout
// Description: Test custom layout
// Short description: su
// Languages: es, us

xkb_keymap {
xkb_keycodes "evdev+aliases(qwerty)" {
    minimum = 8;
    maximum = 255;

    // Function keys row
    //<ESC> = 9;
    //<FK01> = 67;
    //<FK02> = 68;
    //<FK03> = 69;
    //<FK04> = 70;
    //<FK05> = 71;
    //<FK06> = 72;
    //<FK07> = 73;
    //<FK08> = 74;
    //<FK09> = 75;
    //<FK10> = 76;
    //<FK11> = 95;
    //<FK12> = 96;
    //<BKSP> = 22;
    // <TAB> = 23;

     // Numbers row
    //<TLDE> = 49;
    <AE01> = 10;
    <AE02> = 11;
    //<AE03> = 12;
    //<AE04> = 13;
    //<AE05> = 14;
    //<AE06> = 15;
    //<AE07> = 16;
    //<AE08> = 17;
    //<AE09> = 18;
    //<AE10> = 19;
    //<AE11> = 20;
    //<AE12> = 21;

    // QWERTY row
    <AD01> = 24;
    <AD02> = 25;
    //<AD03> = 26;
    //<AD04> = 27;
    //<AD05> = 28;
    //<AD06> = 29;
    //<AD07> = 30;
    //<AD08> = 31;
    //<AD09> = 32;
    //<AD10> = 33;
    //<AD11> = 34;
    //<AD12> = 35;

    // Modifiers
    <LCTL> = 37;
    <LFSH> = 50;
    <RTSH> = 62;
    <LALT> = 64;
    <CAPS> = 66;
    <RCTL> = 105;
    <RALT> = 108;
    <LWIN> = 133;
    <RWIN> = 134;
     <ALT> = 204;
    <NMLK> = 77;
    <LVL3> = 92;
    <META> = 205;
    <SUPR> = 206;
    <HYPR> = 207;
};

xkb_types "minimal+all_levels" {
    // For some reason not having LevelThree here freezes the system, it may be
    // related to https://github.com/elementary/gala/issues/220. I don't think
    // it is either the xkbcomp or libxkbcommon. I ran
    //
    //      time xkbcomp tests/action_vmods.xkb $DISPLAY
    //
    // and the real time is 0,026s, but everything freezes several seconds
    // before seeing the output. This looks more like a clutter/mutter issue,
    // probably specific to the X11 backend?.
    //
    // TODO: Test this from a virtual terminal and see what happens. Be careful
    // not to be left stuck there because there is no way to change the
    // keyboard layout back.
    virtual_modifiers NumLock, Alt, LevelThree;

    type "ONE_LEVEL" {
        modifiers= none;
        level_name[Level1]= "Any";
    };
    type "TWO_LEVEL" {
        modifiers= Shift;
        map[Shift ]= Level2;
        level_name[Level1]= "Base";
        level_name[Level2]= "Shift";
    };
    type "ALPHABETIC" {
        modifiers= Shift+Lock;
        map[Shift]= Level2;
        map[Lock]= Level2;
        level_name[Level1]= "Base";
        level_name[Level2]= "Caps";
    };
    type "KEYPAD" {
        modifiers= Shift+NumLock;
        map[Shift]= Level2;
        map[NumLock]= Level2;
        level_name[Level1]= "Base";
        level_name[Level2]= "Number";
    };

    type "ALL_LEVELS" {
        modifiers= Shift+Alt+Control;
        map[Control + Shift + Alt]= level8;
        map[Control + Alt]= level7;
        map[Control + Shift]= level6;
        map[Control]= level5;
        map[Shift + Alt]= level4;
        map[Alt]= level3;
        map[Shift]= level2;

        // At least one level name is required. xkbcomp won't work if all are
        // missing, but it doesn't check that all defined levels have a name.
        level_name[Level1]= "Base";
    };
};

xkb_compatibility "minimal" {

    virtual_modifiers ScrollLock;

    // At least one interpret and one indicator statement is required. It does
    // not seem to matter their content, but this section can't be empty.
    interpret Any+AnyOf(all) {
        action= NoAction();
    };

    indicator "Scroll Lock" {
        whichModState= locked;
        modifiers= ScrollLock;
    };
};

xkb_symbols "pc+us+inet(evdev)" {

    name[group1]="English (US)";

    key <AD02> {
        type= "ALL_LEVELS",
        symbols[Group1]= [1, 2, 3, 4, 5, 6, 7, 8]
    };

    key <AE01> {
        type= "KEYPAD",
        symbols[Group1]= [k, 0]
    };

    key <AE02> {
        type= "TWO_LEVEL",
        symbols[Group1]= [2, at]
    };

    key <AD01> {
        type= "ALPHABETIC",
        symbols[Group1]= [a, A]
    };

    key <LCTL> {
        type= "ONE_LEVEL",
        symbols[Group1]= [Control_L],
        actions[Group1]= [SetMods(modifiers=Control,clearLocks)]
    };
    key <RCTL> {
        type= "ONE_LEVEL",
        symbols[Group1]= [Control_R],
        actions[Group1]= [SetMods(modifiers=Control,clearLocks)]
    };
    key <LFSH> {
        type= "ONE_LEVEL",
        symbols[Group1]= [Shift_L],
        actions[Group1]= [SetMods(modifiers=Shift,clearLocks)]
    };
    key <RTSH> {
        type= "ONE_LEVEL",
        symbols[Group1]= [Shift_R],
        actions[Group1]= [SetMods(modifiers=Shift,clearLocks)]
    };
    key  <RALT> {
        vmods= Alt,
        type= "ONE_LEVEL",
        symbols[Group1]= [Alt_R],
        actions[Group1]= [SetMods(modifiers=Alt,clearLocks)]
    };
    key  <LALT> {
        vmods= Alt,
        type= "ONE_LEVEL",
        symbols[Group1]= [Alt_R],
        actions[Group1]= [SetMods(modifiers=Alt,clearLocks)]
    };
    key <CAPS> { [ Caps_Lock ] };
    key <NMLK> { [ Num_Lock ] };
    key <LVL3> { [ ISO_Level3_Shift ] };
    key  <ALT> { [ Alt_L ] };
    key <LWIN> { [ Super_L ] };
    key <RWIN> { [ Super_R ] };
    key <META> { [ Meta_L ] };
    key <SUPR> { [ Super_L ] };
    key <HYPR> { [ Hyper_L ] };

    modifier_map Mod1 { <RALT> };
    modifier_map Mod1 { <LALT> };
    modifier_map Control { <RCTL> };
    modifier_map Control { <LCTL> };
    modifier_map Shift { <LFSH> };
    modifier_map Shift { <RTSH> };
    modifier_map Lock { <CAPS> };
    modifier_map Mod2 { <NMLK> };
    modifier_map Mod4 { <LWIN> };
    modifier_map Mod4 { <RWIN> };
    modifier_map Mod4 { <SUPR> };
    modifier_map Mod4 { <HYPR> };
    modifier_map Mod5 { <LVL3> };
};

xkb_geometry "pc(pc105)" {
};

};
