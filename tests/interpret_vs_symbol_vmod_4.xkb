// Here we test what happens if an interpret statement defines a vmod and the
// symbols section only defines a symbol. (This is what normally will happen in
// the default layout database).
//
// To determine what happens, check the encoding of the Foo virtual modifier:
//
//                              Foo
// Interpret wins OR Merge: Shift+Control  <-- Current behavior
//             Symbol wins:    Shift     

xkb_keymap {
xkb_keycodes "keys_k" {
    minimum = 8;
    maximum = 255;
    <ESC> = 9; // KEY_ESC

    <M1> = 24;
    <M2> = 25;

    <E1> = 52;

    <FOO> = 33;

    <1> = 10;
    <2> = 11;

    <FKEY> = 19;
};

xkb_types "keys_t" {
    virtual_modifiers NumLock,Foo;

    type "ONE_LEVEL" {
        modifiers = none;
        map[none] = Level1;
        level_name[Level1] = "Level 1";
    };
    type "TWO_LEVEL" {
        modifiers = Shift;
        map[none] = Level1;
        map[Shift] = Level2;
        level_name[Level1] = "Level 1";
        level_name[Level2] = "Level 2";
    };
    type "ALPHABETIC" {
        modifiers = Shift + Lock;
        map[none] = Level1;
        map[Lock] = Level2;
        map[Shift] = Level2;
        level_name[Level1] = "Level 1";
        level_name[Level2] = "Level 2";
    };
    type "KEYPAD" {
        modifiers = NumLock + Shift;
        map[none] = Level1;
        map[NumLock] = Level2;
        map[Shift] = Level2;
        level_name[Level1] = "Level 1";
        level_name[Level2] = "Level 2";
    };

    type "M1_TEST" {
        modifiers = Shift;
        map[none] = Level1;
        map[Shift] = Level2;
        level_name[Level1] = "Level 1";
        level_name[Level2] = "Level 2";
    };
    type "M2_TEST" {
        modifiers = Control;
        map[none] = Level1;
        map[Control] = Level2;
        level_name[Level1] = "Level 1";
        level_name[Level2] = "Level 2";
    };
    type "FOO_TEST" {
        modifiers = Foo;
        map[none] = Level1;
        map[Foo] = Level2;
        level_name[Level1] = "Level 1";
        level_name[Level2] = "Level 2";
    };
};

xkb_compatibility "keys_c" {
    interpret Alt_L+Exactly(Control) {
        virtualModifier=Foo;
    };
};

xkb_symbols "keys_s" {
    key <ESC> {
        type= "ONE_LEVEL",
        symbols[Group1]= [ Escape ],
        actions[Group1]= [ NoAction() ]
    };
    key <M1> {
        vmods= Foo,
        type= "ONE_LEVEL",
        symbols[Group1]= [ Shift_L ],
        actions[Group1]= [ SetMods(modifiers=Shift) ]
    };
    key <M2> {
        type= "ONE_LEVEL",
        symbols[Group1]= [ Shift_L ],
        actions[Group1]= [ SetMods(modifiers=Control) ]
    };
    key <E1> {
        type= "ONE_LEVEL",
        symbols[Group1]= [ Alt_L ]
    };

    key <FOO> {
        type= "ONE_LEVEL",
        symbols[Group1]= [ Shift_L ],
        actions[Group1]= [ SetMods(modifiers=Foo) ]
    };

    key <1> {
        type= "M1_TEST",
        symbols[Group1]= [ O, bar ]
    };
    key <2> {
        type= "M2_TEST",
        symbols[Group1]= [ O, bar ]
    };
    key <FKEY> {
        type= "FOO_TEST",
        symbols[Group1]= [ O, bar ]
    };

    modifier_map Shift   { <M1> };
    modifier_map Control { <E1> };
};

};

